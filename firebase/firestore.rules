rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Common validation functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isCurrentUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isValidMood() {
      let requiredFields = ['userId', 'timestamp', 'mood', 'value'];
      let hasAllFields = requiredFields.hasAll(request.resource.data.keys());
      let validValue = request.resource.data.value >= 0 && request.resource.data.value <= 100;

      return hasAllFields && validValue;
    }

    // User profile data with validation
    match /users/{userId} {
      allow read: if isCurrentUser(userId);
      allow create: if isCurrentUser(userId) && 
                      request.resource.data.keys().hasAll(['email', 'displayName', 'createdAt']);
      allow update: if isCurrentUser(userId) && 
                      request.resource.data.diff(resource.data).affectedKeys()
                      .hasAny(['displayName', 'photoURL', 'settings', 'stats']);
      allow delete: if false;
    }

    // Mood tracking data with validation
    match /moods/{moodId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && 
                      request.auth.uid == request.resource.data.userId && 
                      isValidMood();
      allow update: if isSignedIn() && 
                      request.auth.uid == resource.data.userId;
      allow delete: if isSignedIn() && 
                      request.auth.uid == resource.data.userId;
    }

    // Exercise data
    match /exercises/{exerciseId} {
      allow read: if isSignedIn();
      allow write: if false; // Only admin can modify exercises
    }

    // Meditation data
    match /meditations/{meditationId} {
      allow read: if isSignedIn();
      allow write: if false; // Only admin can modify meditations
    }

    // User progress data
    match /users/{userId}/progress/{progressId} {
      allow read: if isCurrentUser(userId);
      allow create: if isCurrentUser(userId);
      allow update: if isCurrentUser(userId);
      allow delete: if false;
    }

    // Survey responses
    match /surveys/{surveyId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow delete: if false;
    }
  }
}